<?php

/**
 * @file
 * Os2dagsorden_speaker_paper.
 *
 * PHP version 5
 *
 * @category OS2Dagsorden
 * @package OS2Dagsorden_Speaker_Paper
 * @author Stanislav Kutasevits <stan@bellcom.dk>
 * @license http://www.gnu.org/licenses/gpl-2.0.html GNU General Public License, version 2
 * @link http://bellcom.dk
 */

module_load_include('inc', 'os2dagsorden_speaker_paper', '/includes/os2dagsorden_speaker_paper.util');

/**
 * Implements hook_node_insert().
 *
 * The function will send the email to the user, with which this speaker paper
 * has been shared.
 */
function os2dagsorden_speaker_paper_node_insert($node) {
  if ($node->type === 'os2web_meetings_spaper') {
    if (isset($node->field_os2web_meetings_sp_shared['und'])) {
      foreach ($node->field_os2web_meetings_sp_shared['und'] as $shared_with) {
        $uid = $shared_with['target_id'];
        _os2dagsorden_speaker_paper_send_message($uid, $node);
      }
      foreach ($node->field_os2web_meetings_sp_shar_gr['und'] as $shared_with_group) {
        $uids = _os2dagsorden_speaker_paper_fetch_group_users($shared_with_group['tid']);
        foreach ($uids as $uid) {
          _os2dagsorden_speaker_paper_send_message($uid, $node);
        }
      }
    }
    $bullet_point = node_load($node->field_os2web_meetings_sp_bullet['und'][0]['target_id']);
    $bullet_point_acadre_id = $bullet_point->field_os2web_bullet_point_id['und'][0]['value'];
    $uid = $node->uid;
    $speaking_paper_id = $node->nid;
    // Inserting values to the mapper wich will take care of republish deletion of spealing papers.
    $nid = db_insert('os2dagsorden_speaking_paper_mapping')
      ->fields(array(
        'uid' => $uid,
        'speaking_paper_node_id' => $speaking_paper_id,
        'speaking_paper_bullet_sysid' => $bullet_point_acadre_id,
      ))
    ->execute();
  }
  // Catching node insert of type meetings
  // Now will be to catch meetings import and try find a relation on speaking paper in our custom table - rk_speaking_paper_mapping
  // If we found any, we will update the realtions on the speaking paper node itself and in the mapping table. 
  if ($node->type === 'os2web_meetings_meeting') { 
    // Looping through all bullets assosiated with the meeting
    foreach($node->field_os2web_meetings_bullets['und'] as $bullet) {
      // Getting the node information on bullet
      $bullet_node = node_load($bullet['target_id']);
      $query = db_select('os2dagsorden_speaking_paper_mapping', 'q');
      $query->fields('q');
      $query->condition('speaking_paper_bullet_sysid', $bullet_node->field_os2web_bullet_point_id['und'][0]['value'], '=');
      $stored_speaking_paper_info = $query->execute();
      while ($speaking_paper_relations = $stored_speaking_paper_info->fetchAssoc()) {
        db_update('field_data_field_os2web_meetings_sp_bullet')
          ->fields(array(
            'field_os2web_meetings_sp_bullet_target_id' => $bullet_node->nid,
          ))
          ->condition('entity_id', $speaking_paper_relations['speaking_paper_node_id'], '=')
          ->execute();
      }
    }
  }
}

/**
 * Implements hook_node_update().
 *
 * The function will send the email to the user (if it wasn't sent before), with
 * which this speaker paper has been shared.
 */
function os2dagsorden_speaker_paper_node_update($node) {
  if ($node->type === 'os2web_meetings_spaper') {
    if (isset($node->field_os2web_meetings_sp_shared['und'])) {
      foreach ($node->field_os2web_meetings_sp_shared['und'] as $shared_with) {
        $uid = $shared_with['target_id'];
        if (!_os2dagsorden_speaker_paper_is_message_sent($uid, $node->nid)) {
          _os2dagsorden_speaker_paper_send_message($uid, $node);
        }
      }
      foreach ($node->field_os2web_meetings_sp_shar_gr['und'] as $shared_with_group) {
        $uids = _os2dagsorden_speaker_paper_fetch_group_users($shared_with_group['tid']);
        foreach ($uids as $uid) {
          if (!_os2dagsorden_speaker_paper_is_message_sent($uid, $node->nid)) {
            _os2dagsorden_speaker_paper_send_message($uid, $node);
          }
        }
      }
    }
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function os2dagsorden_speaker_paper_form_os2dagsorden_settings_settings_form_alter(&$form, &$form_state, $form_id) {
  $form['os2dagsorden_speaker_paper_settings'] = array(
    '#type' => 'fieldset',
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
    '#title' => t('Speaker paper settings'),
  );
  $form['os2dagsorden_speaker_paper_settings']['os2dagsorden_shared_speaker_paper'] = array(
    '#type' => 'checkbox',
    '#title' => t('Sharing speaker papers'),
    '#description' => t('This decides whether speaker paper can be shared'),
    '#default_value' => variable_get('os2dagsorden_shared_speaker_paper', TRUE),
  );

  $form['os2dagsorden_speaker_paper_settings']['os2dagsorden_speaper_paper_email_subject'] = array(
    '#type' => 'textfield',
    '#title' => t('Speaker paper sharing notification email subject'),
    '#description' => t('The email subject, which would be send to user with which the speaker paper has been shared'),
    '#default_value' => variable_get('os2dagsorden_speaper_paper_email_subject', '!author har delt talepapiret "!speaker_paper_name" med dig'),
    '#states' => array(
      'visible' => array(
        ':input[name="os2dagsorden_shared_speaker_paper"]' => array('checked' => TRUE),
      ),
    ),
  );
  $form['os2dagsorden_speaker_paper_settings']['os2dagsorden_speaper_paper_email_body'] = array(
    '#type' => 'textarea',
    '#title' => t('Speaker paper sharing notification email text'),
    '#description' => t('The email body, which would be send to user with which the speaker paper has been shared'),
    '#default_value' => variable_get('os2dagsorden_speaper_paper_email_body', 'Til !user' . PHP_EOL . PHP_EOL .
      '!author har delt talepapiret "!speaker_paper_name" med dig' . PHP_EOL . 'Du kan læse/ændre dette talepapir her: !speaker_paper_link'),
    '#states' => array(
      'visible' => array(
        ':input[name="os2dagsorden_shared_speaker_paper"]' => array('checked' => TRUE),
      ),
    ),
  );
  $form['os2dagsorden_speaker_paper_settings']['os2dagsorden_send_email_text_available_variables'] = array(
    '#type' => 'fieldset',
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
    '#value' => t('Can be used both in subject and body:') . '<br/>
    <b>!committe</b> - ' . t('name of the committee') . '<br/>
    <b>!meeting_name</b> - ' . t('title of the meeting') . '<br/>
    <b>!meeting_date</b> - ' . t('date of the meeting') . '<br/>
    <b>!bullet_point_name</b> - ' . t('title of the bullet point that speaker paper is created under') . '<br/>
    <b>!speaker_paper_name</b> - ' . t('title of the created speaker paper') . '<br/>
    <b>!speaker_paper_link</b> - ' . t('link to the created speaker paper') . '<br/>
    <b>!user</b> - ' . t('name of the user that message is sent to') . '<br/>
    <b>!author</b> - ' . t('name of the user that created speaker paper') . '<br/>',
    '#title' => t('Available variables'),
    '#states' => array(
      'visible' => array(
        ':input[name="os2dagsorden_shared_speaker_paper"]' => array('checked' => TRUE),
      ),
    ),
  );

  // Sort items alphabetically.
  ksort($form);
}

/**
 * Implements hook_form_alter().
 *
 * Multiple modifications to speaker paper create/edit form.
 */
function os2dagsorden_speaker_paper_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id === 'os2web_meetings_spaper_node_form') {
    global $base_url;
    // Setting title.
    drupal_set_title(t('Create @speaker_paper', array('@speaker_paper' => variable_get('os2dagsorden_title_meeting_comments', 'Talepapir'))));

    // Adding values into the body field, each time user is opening the speaker
    // paper form, e.g.
    // [..previous text..]
    // admin, 03-08-2016:
    global $user;
    $form['body']['und'][0]['#default_value'] .= empty($user->field_user_full_name['und'][0]['value']) ? $user->name : $user->field_user_full_name['und'][0]['value'];
    $form['body']['und'][0]['#default_value'] .= ', ' . date('d-m-Y') . ':';
    $target_bp = $_GET['edit']['field_os2web_meetings_sp_bullet']['und'][0]['target_id'];
    // Get nid of target BP.
    $result = preg_match('/\(([0-9]+)\)/', $target_bp, $matches);
    if ($result > 0) {
      $bp_nid = $matches[$result];
      $bullet_point = node_load($bp_nid);
    }
    elseif (isset($form['#entity']->nid)) {
      $bp_nid = $form['#entity']->field_os2web_meetings_sp_bullet['und'][0]['target_id'];
      $bullet_point = node_load($bp_nid);
    }
    $meeting = os2dagsorden_access_helper_get_meeting_by_bullet_point($bp_nid);

    // Modifying the shared with field, adding shared with user full name.
    foreach ($form['field_os2web_meetings_sp_shared']['und']['#options'] as $uid => $user_login_name) {

      // Eliminating all _none and 0 Anonym options.
      if (intval($uid) > 0) {
        $share_with_user = user_load($uid);

        if (!$share_with_user->status) {
          // Removing disabled users.
          unset($form['field_os2web_meetings_sp_shared']['und']['#options'][$uid]);
        }
        else {
          $user_full_name = $share_with_user->field_user_full_name['und'][0]['value'];
          if (!empty($user_full_name)) {
            $form['field_os2web_meetings_sp_shared']['und']['#options'][$uid] = "$user_full_name ($user_login_name)";
          }
        }
        $meeting = os2dagsorden_access_helper_get_meeting_by_bullet_point($bp_nid);
        if (os2dagsorden_access_helper_node_access($meeting, 'view', $share_with_user) === NODE_ACCESS_DENY
            || os2dagsorden_access_helper_node_access($bullet_point, 'view', $share_with_user) === NODE_ACCESS_DENY) {
          unset($form['field_os2web_meetings_sp_shared']['und']['#options'][$uid]);
        }
      }
      else {
        unset($form['field_os2web_meetings_sp_shared']['und']['#options'][$uid]);
      }
    }

    // Breadcrumb.
    $breadcrumb[] = l(t('Forsiden'), $base_url);
    $breadcrumb[] .= l(t('Mødedetaljer'), 'meeting/' . $meeting->nid);
    $breadcrumb[] .= l($bullet_point->title, 'meeting/' . $meeting->nid . '/bullet-point/' . $bp_nid);
    $breadcrumb[] .= '<span class="breadcrumb-active">' . t('Create @speaker_paper', array('@speaker_paper' => variable_get('os2dagsorden_title_meeting_comments', 'Talepapir'))) . '</span>';

    drupal_set_breadcrumb($breadcrumb);
    $form['#attached']['js'] = array(drupal_get_path('module', 'os2dagsorden_speaker_paper') . '/js/os2dagsorden_speaker_paper.js');

    $form['actions']['submit']['#submit'][] = 'os2dagsorden_speaker_paper_rewrite_status_message';
  }
}

/**
 * Override status message on Talepapir node creation.
 */
function os2dagsorden_speaker_paper_rewrite_status_message() {
  $message = array_shift(drupal_get_messages('status'));
  // To override message.
  $new_message = str_replace('Talepapir', variable_get('os2dagsorden_title_meeting_comments', 'Talepapir'), $message[0]);
  drupal_set_message($new_message);
}
