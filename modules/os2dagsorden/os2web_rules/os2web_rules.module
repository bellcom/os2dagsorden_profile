<?php

/**
 * @file
 * This module implements OS2web related rules.
 */

/**
 * Implements hook_rules_action_info().
 */
function os2web_rules_rules_action_info() {
  $account = array(
    'os2web_rules_rules_action_drupal_message' => array(
      'label' => t('Set taxonomy from user roles'),
      'group' => t('OS2web'),
      'parameter' => array(
        'account' => array(
          'type' => 'user',
          'label' => t('Going to get user list'),
          'save' => TRUE,
        ),
      ),
    ),
  );
return $account;
}

/**
 * Rule that reads all user roles and assigns them to taxonomies with the same name.
 * Mapping of the user roles is done via simplesaml SSO module role mapping tool 
 *
 * @ingroup rules
 */
function os2web_rules_rules_action_drupal_message($account) {
  // Loading user object for correct saving of user info.
  $user = user_load($account->uid);

  // Logging for admin to se that the rule is engaged
  watchdog('OS2web LDAP Roles', 'rule triggered');

  // We only need parts of the account data set inherited from the condition.
  $data = $account->roles;

  // Loading the taxonomy of choice - we use the machine name
  $termnames = array();
  $vocabulary = taxonomy_vocabulary_machine_name_load('os2web_meetings_tax_committee');
  $terms = taxonomy_get_tree($vocabulary->vid);
  foreach ($terms as $termname) {
    $termnames[$termname->name]['tid'] = $termname->tid;
    $termnames[$termname->name]['name'] = $termname->name;
  }

  // Loading the taxonomies that the user is already assigned to 
  $user_committees = $user->field_user_committee['und'];
  foreach ($user_committees as $user_committee) {
    $committee_id = $user_committee['tid']; 
    $user_comm = taxonomy_term_load($committee_id); // load term object
    $term_uri = taxonomy_term_uri($user_comm); // get array with path (maybe not needed - but usefull)
    $term_title = taxonomy_term_title($user_comm); // set the title for the taxonomy
    if($term_title) {
      $term_committee[$term_title]['tid'] = $committee_id; // Title is the key as we only have the text to map from
      $term_committee[$term_title]['name'] = $term_title;  // So user role and taxonomy name must be the same. 
    }
  }

  // Looping over the drupal roles and assigning taxonomies of the same name.
  // Case insensitive.
  foreach ($data as $role_tid => $role_name) {
    $user_is_part_of_committee = FALSE;
    if (array_key_exists($role_name,$term_committee)) {
        drupal_set_message("brugeren er allerede tilmeldt udvalget ". $rolename);
    }
    else {
      if (array_key_exists($role_name,$termnames)) {
        drupal_set_message("brugeren er nu tilknyttet udvalget ". $role_name . " og id " . $termnames[$role_name]['tid']);
        $user->field_user_committee['und'][]['tid'] = $termnames[$role_name]['tid']; 
      }
    }
  }  

  // Saving the user session with changes.
  user_save($user);
}
